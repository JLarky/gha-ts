# Do not modify!
# This file was generated by https://github.com/JLarky/gha-ts

name: Test gha-ts
"on":
  pull_request: {}
  push:
    branches:
      - main
  schedule:
    - cron: 52 16 * * *
jobs:
  actionlintReviewDog:
    name: Actionlint Review Dog
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Run reviewdog/action-actionlint
        uses: reviewdog/action-actionlint@v1
        with:
          reporter: github-pr-check
          fail_level: any
  actionlintSelfHosted:
    name: Actionlint Self Hosted
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: store .github/actionlint-matcher.json
        env:
          ACTIONLINT_MATCHER_JSON: "{\"problemMatcher\":[{\"owner\":\"actionlint\",\"pattern\":[{\"regexp\":\"^(?:\\\\x1b\\\\[\\\\d+m)?(.+?)(?:\\\\x1b\\\\[\\\\d+m)*:(?:\\\\x1b\\\\[\\\\d+m)*(\\\\d+)(?:\\\\x1b\\\\[\\\\d+m)*:(?:\\\\x1b\\\\[\\\\d+m)*(\\\\d+)(?:\\\\x1b\\\\[\\\\d+m)*: (?:\\\\x1b\\\\[\\\\d+m)*(.+?)(?:\\\\x1b\\\\[\\\\d+m)* \\\\[(.+?)\\\\]$\",\"file\":1,\"line\":2,\"column\":3,\"message\":4,\"code\":5}]}]}"
        run: echo "$ACTIONLINT_MATCHER_JSON" > .github/actionlint-matcher.json
      - name: Enable problem matcher and run actionlint
        run: |-
          echo "::add-matcher::.github/actionlint-matcher.json"
          bash <(curl -fsSL https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color
        shell: bash
  formatTest:
    name: Format Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Bun install
        run: bun install
      - name: store .github/oxfmt-matcher.json
        env:
          OXFMT_MATCHER_JSON: "{\"problemMatcher\":[{\"owner\":\"oxfmt\",\"severity\":\"error\",\"pattern\":[{\"regexp\":\"^(.+): (.+)$\",\"file\":1,\"line\":1,\"message\":2}]}]}"
        run: echo "$OXFMT_MATCHER_JSON" > .github/oxfmt-matcher.json
      - name: Enable problem matcher and run format check
        run: |-
          echo "::add-matcher::.github/oxfmt-matcher.json"
          set -o pipefail
          bun run oxfmt --list-different .github src tests | sed "/^$/d; s|$|: File is not formatted. Run 'mise run format' to fix.|"
  typeCheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Bun install
        run: bun install
      - name: Type Check
        run: mise run typecheck
  miseTest:
    name: Mise Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Bun install
        run: bun install
      - name: Test gha-ts
        run: mise run test
  dryRunPublish:
    name: Dry run publish package
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Dry run publish package
        run: bunx jsr publish --dry-run
  tryPublishedPackage:
    name: Try Published Package
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Run the test
        run: mise run validate-published-package
  validateDegitExamples:
    name: Validate Degit Examples
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: 2.5.4
      - name: Validate degit examples
        run: mise run validate-published-degit --degit-branch ${{ github.ref_name || 'main' }}
  checkGhaTsWorkflowsConverted:
    name: Check gha-ts workflows converted
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Install dependencies
        run: mise run install
      - name: Clear generated workflows
        run: mise run workflows:clear
      - name: Generate TS workflows to yaml
        run: mise run workflows:build
      - name: Verify if TS workflows are converted
        run: |-
          CHANGED="$(git --no-pager diff --name-only)";
          if [ -n "$CHANGED" ]; then
            echo "::error title=TS workflows are not up to date::Run 'mise run workflows:build' locally, commit, and push.";
            echo "::group::Changed files";
            echo "$CHANGED";
            echo "::endgroup::";
            while IFS= read -r file; do
              [ -z "$file" ] && continue;
              echo "::notice file=$file,line=1,title=Changed file::Update generated YAML for this file";
            done <<< "$CHANGED";
            {
              echo "### TS workflows are not up to date";
              echo;
              echo "Run: mise run workflows:build";
              echo;
              echo "Then commit the updated files and push.";
              echo;
              echo "Changed files:";
              echo;
              echo "$CHANGED" | awk '{print "- " $0}';
            } >> "$GITHUB_STEP_SUMMARY";
            exit 1;
          fi

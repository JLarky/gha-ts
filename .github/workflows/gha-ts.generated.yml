# Do not modify!
# This file was generated by https://github.com/JLarky/gha-ts

name: Test gha-ts
"on": 
  pull_request: 
    {}
  push: 
    branches: 
      - main
  schedule: 
    - cron: 52 16 * * *
jobs: 
  actionlintReviewDog: 
    name: Actionlint Review Dog
    runs-on: ubuntu-latest
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: Run reviewdog/action-actionlint
        uses: reviewdog/action-actionlint@v1
        with: 
          reporter: github-pr-check
          fail_level: any
  actionlintSelfHosted: 
    name: Actionlint Self Hosted
    runs-on: ubuntu-latest
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: store .github/actionlint-matcher.json
        env: 
          ACTIONLINT_MATCHER_JSON: "{\"problemMatcher\":[{\"owner\":\"actionlint\",\"pattern\":[{\"regexp\":\"^(?:\\\\x1b\\\\[\\\\d+m)?(.+?)(?:\\\\x1b\\\\[\\\\d+m)*:(?:\\\\x1b\\\\[\\\\d+m)*(\\\\d+)(?:\\\\x1b\\\\[\\\\d+m)*:(?:\\\\x1b\\\\[\\\\d+m)*(\\\\d+)(?:\\\\x1b\\\\[\\\\d+m)*: (?:\\\\x1b\\\\[\\\\d+m)*(.+?)(?:\\\\x1b\\\\[\\\\d+m)* \\\\[(.+?)\\\\]$\",\"file\":1,\"line\":2,\"column\":3,\"message\":4,\"code\":5}]}]}"
        run: "echo \"$ACTIONLINT_MATCHER_JSON\" > .github/actionlint-matcher.json"
      - name: Enable problem matcher and run actionlint
        run: "echo \"::add-matcher::.github/actionlint-matcher.json\"\nbash <(curl -fsSL https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)\n./actionlint -color"
        shell: bash
  formatTest: 
    name: Format Test
    runs-on: ubuntu-latest
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Bun install
        run: bun install
      - name: Format Check
        run: mise run format:check
  miseTest: 
    name: Mise Test
    runs-on: ubuntu-latest
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Bun install
        run: bun install
      - name: Test gha-ts
        run: mise run test
  dryRunPublish: 
    name: Dry run publish package
    runs-on: ubuntu-latest
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Dry run publish package
        run: bunx jsr publish --dry-run
  tryPublishedPackage: 
    name: Try Published Package
    runs-on: ubuntu-latest
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Run the test
        run: mise run validate-published-package
  validateDegitExamples: 
    name: Validate Degit Examples
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Validate degit examples
        run: mise run validate-published-degit
  checkGhaTsWorkflowsConverted: 
    name: Check gha-ts workflows converted
    runs-on: ubuntu-latest
    steps: 
      - name: checkout
        uses: actions/checkout@v5
      - name: Install mise
        uses: jdx/mise-action@v3
      - name: Install dependencies
        run: mise run install
      - name: Clear generated workflows
        run: mise run workflows:clear
      - name: Generate TS workflows to yaml
        run: mise run workflows:build
      - name: Verify if TS workflows are converted
        run: "CHANGED=\"$(git --no-pager diff --name-only)\";\n            if [ -n \"$CHANGED\" ]; then\n              echo \"::error title=TS workflows are not up to date::Run 'mise run workflows:build' locally, commit, and push.\";\n              echo \"::group::Changed files\";\n              echo \"$CHANGED\";\n              echo \"::endgroup::\";\n              while IFS= read -r file; do\n                [ -z \"$file\" ] && continue;\n                echo \"::notice file=$file,line=1,title=Changed file::Update generated YAML for this file\";\n              done <<< \"$CHANGED\";\n              {\n                echo \"### TS workflows are not up to date\";\n                echo;\n                echo \"Run: mise run workflows:build\";\n                echo;\n                echo \"Then commit the updated files and push.\";\n                echo;\n                echo \"Changed files:\";\n                echo;\n                echo \"$CHANGED\" | awk '{print \"- \" $0}';\n              } >> \"$GITHUB_STEP_SUMMARY\";\n              exit 1;\n            fi"

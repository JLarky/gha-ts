examples {
  ["basic"] {
    """
    name: PrintHelloWorld
    'on':
      pull_request:
        types:
        - opened
        - edited
        - reopened
        - synchronize
        - review_requested
      push:
        branches:
        - master
        - develop
        tags-ignore:
        - v*
      workflow_dispatch:
        inputs:
          name:
            description: Name of the person to greet
            required: true
            default: Mona the Octocat
    env:
      PR_NUMBER: ${{github.event.number}}
    concurrency:
      group: example-group
      cancel-in-progress: true
    permissions:
      actions: read
      contents: read
      issues: write
      pull-requests: write
    jobs:
      hello_dependabot:
        runs-on: macos-latest
        if: ${{ github.actor == 'dependabot[bot]' }}
        steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            ref: develop
            token: ${{ secrets.GITHUB_TOKEN }}
        - name: Hello World
          working-directory: src/
          run: echo Dependabot!
      print:
        runs-on: ubuntu-latest
        steps:
        - name: Hello World
          run: echo Hello World
        - name: date
          run: date
        - name: Checkout
          uses: actions/checkout@v4
          with:
            ref: develop
        - name: Slack
          id: Slack
          if: ${{ failure() }}
          uses: slackapi/slack-github-action@v1.25.0
          with:
            payload: "{\\n\\t\\"blocks\\": [\\n\\t\\t{\\n    \\"type\\": \\"section\\",\\n\\t\\t\\t\\"text\\": {\\n\\t\\t\\t\\t\\"type\\": \\"mrkdwn\\",\\n\\t\\t\\t\\t\\"text\\": \\":alert: Develop is broken!\\"\\n\\t\\t\\t}\\n\\t\\t}\\n\\t]\\n}"
    
    """
  }
  ["workflowTriggers"] {
    """
    name: GitHub Action Triggers
    'on':
      branch_protection_rule:
        types: []
      check_run:
        types: []
      check_suite:
        types: []
      create: {}
      delete: {}
      deployment: {}
      deployment_status: {}
      discussion:
        types: []
      discussion_comment:
        types: []
      fork: {}
      gollum: {}
      issue_comment:
        types: []
      issues:
        types: []
      label:
        types: []
      milestone:
        types: []
      page_build: {}
      project:
        types: []
      project_card:
        types: []
      project_column:
        types: []
      public: {}
      pull_request:
        types: []
      pull_request_review:
        types: []
      pull_request_review_comment:
        types: []
      pull_request_target:
        types: []
      push: {}
      registry_package:
        types: []
      release:
        types: []
      repository_dispatch:
        types: []
      schedule:
        cron: []
      status: {}
      watch: {}
      workflow_call: {}
      workflow_dispatch: {}
      workflow_run:
        types: []
    jobs:
      doesntMatter:
        runs-on: ubuntu-latest
        steps:
        - name: Hello
          run: echo 'Hello, World!'
    
    """
  }
  ["updateWikiReadme"] {
    """
    name: Update Wiki Readme
    'on':
      push:
        paths:
        - wiki/**
        - '!wiki/README.md'
    jobs:
      update-wiki-readme:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-go@v5
          with:
            go-version: 1.17.7
        - run: go run wiki/generateWikiToc.go
        - name: Commit changes
          run: |-
            git config --global user.email "StefM@IsGre.at"
            git config --global user.name "StefMa"
            git add wiki/README.md || echo "No changes to commit"
            git commit -m 'Re-build TOC in README.md' || echo "No changes to commit"
            git push origin || echo "No changes to commit"
    
    """
  }
}
